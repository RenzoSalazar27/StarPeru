@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Iniciar Sesión</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #e14a4a 0%, #ff6b6b 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .auth-container {
            display: flex;
            width: 900px;
            height: 500px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-top: 60px;
        }

        .login-section {
            flex: 1;
            padding: 40px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .register-section {
            flex: 1;
            background: #e14a4a;
            color: white;
            padding: 40px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
        }

        h2 {
            margin: 0 0 20px;
            font-size: 2em;
            font-weight: bold;
        }

        .login-section h2 {
            color: #e14a4a;
        }

        .form-group {
            margin-bottom: 20px;
        }

        input {
            width: 100%;
            padding: 12px;
            border: 2px solid #eee;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        input:focus {
            border-color: #e14a4a;
            outline: none;
            box-shadow: 0 0 0 3px rgba(225, 74, 74, 0.1);
        }

        .forgot-password {
            display: block;
            color: #e14a4a;
            text-decoration: none;
            margin: 10px 0 20px;
            font-size: 14px;
        }

        .forgot-password:hover {
            text-decoration: underline;
        }

        .login-btn {
            width: 100%;
            padding: 12px;
            background: #e14a4a;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .login-btn:hover {
            background: #ff6b6b;
            transform: translateY(-2px);
        }

        .register-section p {
            font-size: 1.2em;
            margin-bottom: 30px;
        }

        .register-btn {
            display: inline-block;
            padding: 12px 30px;
            background: white;
            color: #e14a4a;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin: 5px;
        }

        .register-btn:hover {
            background: #f8f8f8;
            transform: translateY(-2px);
        }

        .alert {
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-danger {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        @@media (max-width: 768px) {
            .auth-container {
                flex-direction: column;
                width: 90%;
                height: auto;
            }

            .login-section, .register-section {
                padding: 30px;
            }
        }
    </style>
</head>
<body>
    <div style="position: fixed; top: 0; left: 0; right: 0; background: #f8f9fa; padding: 10px; z-index: 1000; border-bottom: 1px solid #dee2e6;">
        <div style="display: flex; justify-content: flex-end; gap: 20px;">
            <div style="display: flex; align-items: center; gap: 10px;">
                <label style="position: relative; display: inline-block; width: 60px; height: 34px;">
                    <input type="checkbox" id="voiceToggle" style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px;">
                        <span style="position: absolute; content: ''; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                    </span>
                </label>
                <span style="color: #333; font-size: 14px;">Lector (Alt+V)</span>
            </div>
            <div style="display: flex; align-items: center; gap: 10px;">
                <label style="position: relative; display: inline-block; width: 60px; height: 34px;">
                    <input type="checkbox" id="voiceNavToggle" style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px;">
                        <span style="position: absolute; content: ''; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                    </span>
                </label>
                <span style="color: #333; font-size: 14px;">Reconocimiento de voz</span>
            </div>
        </div>
    </div>

    <div class="auth-container">
        <div class="login-section">
            <h2>Iniciar Sesión</h2>
            @if (TempData["AuthSuccess"] != null)
            {
                <div class="alert alert-success">
                    @TempData["AuthSuccess"]
                </div>
            }
            @if (TempData["AuthError"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["AuthError"]
                </div>
            }
            <form method="post" asp-controller="Home" asp-action="Login">
                <div class="form-group">
                    <input type="email" id="email" name="email" placeholder="Correo electrónico" required />
                </div>
                <div class="form-group">
                    <input type="password" id="password" name="password" placeholder="Contraseña" required />
                </div>
                <a href="@Url.Action("RecuperarContrasena", "Home", new { area = "Autenticacion" })" class="forgot-password">¿Olvidaste tu contraseña?</a>
                <button type="submit" class="login-btn">Iniciar Sesión</button>
            </form>
        </div>
        <div class="register-section">
            <h2>¡Bienvenido!</h2>
            <p>¿No tienes una cuenta? Regístrate ahora</p>
            <a asp-controller="Home" asp-action="Registro" class="register-btn">Registrarse</a>
            <a asp-controller="Home" asp-action="Index" class="register-btn">Volver al Inicio</a>
        </div>
    </div>

    <script src="~/js/vozPorTexto.js" asp-append-version="true"></script>
    <script src="~/js/vozNavegacion.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const voiceToggle = document.getElementById('voiceToggle');
            const voiceNavToggle = document.getElementById('voiceNavToggle');

            // Función para actualizar el estado visual del switch
            function updateSwitchState(checkbox, isChecked) {
                const slider = checkbox.nextElementSibling;
                const circle = slider.firstElementChild;
                if (isChecked) {
                    slider.style.backgroundColor = '#e14a4a';
                    circle.style.transform = 'translateX(26px)';
                } else {
                    slider.style.backgroundColor = '#ccc';
                    circle.style.transform = 'translateX(0)';
                }
            }

            // Recuperar estado guardado
            const savedVoiceState = localStorage.getItem('voiceToggle');
            const savedNavState = localStorage.getItem('voiceNavToggle');

            if (savedVoiceState === 'true') {
                voiceToggle.checked = true;
                updateSwitchState(voiceToggle, true);
            }

            if (savedNavState === 'true') {
                voiceNavToggle.checked = true;
                updateSwitchState(voiceNavToggle, true);
            }

            // Eventos para los switches
            voiceToggle.addEventListener('change', function() {
                localStorage.setItem('voiceToggle', this.checked);
                updateSwitchState(this, this.checked);
            });

            voiceNavToggle.addEventListener('change', function() {
                localStorage.setItem('voiceNavToggle', this.checked);
                updateSwitchState(this, this.checked);
            });
        });
    </script>
</body>
</html>
