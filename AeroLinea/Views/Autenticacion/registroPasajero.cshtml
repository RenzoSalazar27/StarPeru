@model AeroLinea.Models.Usuario
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Registro de Usuario</title>
    <link rel="stylesheet" href="~/css/Autenticacion/registroPasajero.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        body {
            background: linear-gradient(135deg, #e14a4a 0%, #ff6b6b 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            margin: 0;
        }
        .register-container {
            background: white;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 1000px;
        }
        .register-container h2 {
            color: #e14a4a;
            text-align: center;
            margin-bottom: 1.5rem;
            font-weight: bold;
        }
        .form-group {
            margin-bottom: 1.2rem;
        }
        .form-group label {
            color: #333;
            font-weight: 500;
            margin-bottom: 0.5rem;
        }
        .form-control {
            border: 2px solid #eee;
            border-radius: 8px;
            padding: 0.8rem;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: #e14a4a;
            box-shadow: 0 0 0 0.2rem rgba(225, 74, 74, 0.25);
        }
        .btn-primary {
            background-color: #e14a4a;
            border: none;
            padding: 0.8rem;
            border-radius: 8px;
            width: 100%;
            font-weight: 600;
            margin-top: 1rem;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            background-color: #ff6b6b;
            transform: translateY(-2px);
        }
        .btn-secondary {
            background-color: #6c757d;
            border: none;
            padding: 0.8rem;
            border-radius: 8px;
            width: 100%;
            font-weight: 600;
            margin-top: 1rem;
            transition: all 0.3s ease;
            color: white;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        .btn-secondary:hover {
            background-color: #5a6268;
            transform: translateY(-2px);
            color: white;
            text-decoration: none;
        }
        .button-group {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }
        .button-group .btn {
            flex: 1;
        }
        .mt-3 a {
            color: #e14a4a;
            text-decoration: none;
            display: block;
            text-align: center;
            margin-top: 1rem;
        }
        .mt-3 a:hover {
            color: #ff6b6b;
            text-decoration: underline;
        }
        .alert {
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        .text-danger {
            color: #e14a4a !important;
            font-size: 0.9rem;
            margin-top: 0.3rem;
        }
    </style>
</head>
<body>
    <div style="position: fixed; top: 0; left: 0; right: 0; background: #f8f9fa; padding: 10px; z-index: 1000; border-bottom: 1px solid #dee2e6;">
        <div style="display: flex; justify-content: flex-end; gap: 20px;">
            <div style="display: flex; align-items: center; gap: 10px;">
                <label style="position: relative; display: inline-block; width: 60px; height: 34px;">
                    <input type="checkbox" id="voiceToggle" style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px;">
                        <span style="position: absolute; content: ''; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                    </span>
                </label>
                <span style="color: #333; font-size: 14px;">Lector (Alt+V)</span>
            </div>
            <div style="display: flex; align-items: center; gap: 10px;">
                <label style="position: relative; display: inline-block; width: 60px; height: 34px;">
                    <input type="checkbox" id="voiceNavToggle" style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px;">
                        <span style="position: absolute; content: ''; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                    </span>
                </label>
                <span style="color: #333; font-size: 14px;">Reconocimiento de voz</span>
            </div>
        </div>
    </div>

    <div class="register-container" style="margin-top: 60px;">
        <h2>Registro de Usuario</h2>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">
                @TempData["Success"]
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">
                @TempData["Error"]
            </div>
        }
        <form asp-action="registroPasajero" asp-controller="Home" method="post" id="registroForm">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="nombresUsuario">Nombres</label>
                        <input asp-for="nombresUsuario" class="form-control" maxlength="30" minlength="5" 
                               placeholder="Ingrese sus nombres" 
                               title="Los nombres deben tener entre 5 y 30 caracteres" required />
                        <span asp-validation-for="nombresUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="apellidosUsuario">Apellidos</label>
                        <input asp-for="apellidosUsuario" class="form-control" maxlength="30" minlength="5" 
                               placeholder="Ingrese sus apellidos" 
                               title="Los apellidos deben tener entre 5 y 30 caracteres" required />
                        <span asp-validation-for="apellidosUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="nacimientoUsuario">Fecha de Nacimiento</label>
                        <input asp-for="nacimientoUsuario" type="date" class="form-control" 
                               max="@DateTime.Now.ToString("yyyy-MM-dd")"
                               title="La fecha de nacimiento no puede ser posterior al día actual" required />
                        <span asp-validation-for="nacimientoUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="telefonoUsuario">Teléfono</label>
                        <input asp-for="telefonoUsuario" class="form-control" maxlength="9" minlength="9" 
                               placeholder="Ingrese su número de teléfono" 
                               title="El teléfono debe tener 9 dígitos" required />
                        <span asp-validation-for="telefonoUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="identificacionUsuario">DNI</label>
                        <input asp-for="identificacionUsuario" class="form-control" maxlength="8" minlength="8" 
                               placeholder="Ingrese su DNI" 
                               title="El DNI debe tener 8 dígitos" required />
                        <span asp-validation-for="identificacionUsuario" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="correoUsuario">Correo Electrónico</label>
                        <input asp-for="correoUsuario" type="email" class="form-control" maxlength="30" 
                               placeholder="ejemplo@correo.com" 
                               title="Ingrese un correo electrónico válido" required />
                        <span asp-validation-for="correoUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="contrasenaUsuario">Contraseña</label>
                        <input asp-for="contrasenaUsuario" type="password" class="form-control" 
                               maxlength="20" minlength="6" 
                               placeholder="Ingrese su contraseña" 
                               title="La contraseña debe tener entre 6 y 20 caracteres, incluir letras, números y caracteres especiales" required />
                        <span asp-validation-for="contrasenaUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="confirmarContrasena">Confirmar Contraseña</label>
                        <input type="password" id="confirmarContrasena" name="confirmarContrasena" class="form-control" 
                               maxlength="20" minlength="6" 
                               placeholder="Confirme su contraseña" 
                               title="Las contraseñas deben coincidir" required />
                        <span class="text-danger" id="errorConfirmarContrasena"></span>
                    </div>
                    <div class="form-group">
                        <label for="discapacidad">¿Tiene alguna discapacidad?</label>
                        <select asp-for="discapacidad" class="form-control" onchange="mostrarCondicion(this.value)" required>
                            <option value="false">No</option>
                            <option value="true">Sí</option>
                        </select>
                        <span asp-validation-for="discapacidad" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="condicionGroup" style="display: none;">
                        <label for="condicionUsuario">Condición</label>
                        <select asp-for="condicionUsuario" class="form-control">
                            <option value="Daltonismo">Daltonismo</option>
                        </select>
                        <span asp-validation-for="condicionUsuario" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="button-group">
                <a asp-controller="Home" asp-action="Autenticacion" class="btn btn-secondary">Atrás</a>
                <button type="submit" class="btn btn-primary">Registrarse</button>
            </div>
        </form>
        <div class="mt-3">
            <a asp-controller="Home" asp-action="Autenticacion">¿Ya tienes cuenta? Inicia sesión</a>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/vozPorTexto.js" asp-append-version="true"></script>
    <script src="~/js/vozNavegacion.js" asp-append-version="true"></script>
    <script>
        function mostrarCondicion(valor) {
            const condicionGroup = document.getElementById('condicionGroup');
            if (valor === 'true') {
                condicionGroup.style.display = 'block';
            } else {
                condicionGroup.style.display = 'none';
            }
        }

        // Validación de nombres y apellidos (solo letras)
        document.querySelectorAll('input[name="nombresUsuario"], input[name="apellidosUsuario"]').forEach(function(input) {
            input.addEventListener('input', function() {
                this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, '');
            });
        });

        // Validación de DNI (solo números)
        document.querySelector('input[name="identificacionUsuario"]').addEventListener('input', function() {
            this.value = this.value.replace(/[^0-9]/g, '');
        });

        // Validación de teléfono
        document.querySelector('input[name="telefonoUsuario"]').addEventListener('input', function() {
            this.value = this.value.replace(/[^0-9]/g, '').substring(0, 9);
        });

        // Validación de contraseña
        document.querySelector('input[name="contrasenaUsuario"]').addEventListener('input', function() {
            const password = this.value;
            const hasLetter = /[a-zA-Z]/.test(password);
            const hasNumber = /[0-9]/.test(password);
            const hasSpecial = /[^a-zA-Z0-9]/.test(password);
            
            if (!password) {
                this.setCustomValidity('La contraseña es requerida');
            } else if (password.length < 6) {
                this.setCustomValidity('La contraseña debe tener al menos 6 caracteres');
            } else if (password.length > 20) {
                this.setCustomValidity('La contraseña no puede tener más de 20 caracteres');
            } else if (!hasLetter || !hasNumber) {
                this.setCustomValidity('La contraseña debe incluir letras y números');
            } else if (!hasSpecial) {
                this.setCustomValidity('La contraseña debe incluir al menos un carácter especial');
            } else {
                this.setCustomValidity('');
            }
        });

        // Validación de confirmación de contraseña
        document.querySelector('input[name="confirmarContrasena"]').addEventListener('input', function() {
            const password = document.querySelector('input[name="contrasenaUsuario"]').value;
            const confirmPassword = this.value;
            const errorSpan = document.getElementById('errorConfirmarContrasena');

            if (password !== confirmPassword) {
                this.setCustomValidity('Las contraseñas no coinciden');
                errorSpan.textContent = 'Las contraseñas no coinciden';
            } else {
                this.setCustomValidity('');
                errorSpan.textContent = '';
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            const voiceToggle = document.getElementById('voiceToggle');
            const voiceNavToggle = document.getElementById('voiceNavToggle');

            // Función para actualizar el estado visual del switch
            function updateSwitchState(checkbox, isChecked) {
                const slider = checkbox.nextElementSibling;
                const circle = slider.firstElementChild;
                if (isChecked) {
                    slider.style.backgroundColor = '#e14a4a';
                    circle.style.transform = 'translateX(26px)';
                } else {
                    slider.style.backgroundColor = '#ccc';
                    circle.style.transform = 'translateX(0)';
                }
            }

            // Recuperar estado guardado
            const savedVoiceState = localStorage.getItem('voiceToggle');
            const savedNavState = localStorage.getItem('voiceNavToggle');

            if (savedVoiceState === 'true') {
                voiceToggle.checked = true;
                updateSwitchState(voiceToggle, true);
            }

            if (savedNavState === 'true') {
                voiceNavToggle.checked = true;
                updateSwitchState(voiceNavToggle, true);
            }

            // Eventos para los switches
            voiceToggle.addEventListener('change', function() {
                localStorage.setItem('voiceToggle', this.checked);
                updateSwitchState(this, this.checked);
            });

            voiceNavToggle.addEventListener('change', function() {
                localStorage.setItem('voiceNavToggle', this.checked);
                updateSwitchState(this, this.checked);
            });
        });
    </script>
</body>
</html> 