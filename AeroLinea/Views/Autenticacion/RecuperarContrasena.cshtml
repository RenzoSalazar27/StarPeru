@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Recuperar Contraseña</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #e14a4a 0%, #ff6b6b 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .recovery-container {
            width: 400px;
            padding: 40px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
        }

        h2 {
            margin: 0 0 20px;
            font-size: 2em;
            font-weight: bold;
            color: #e14a4a;
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            color: #333;
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        input {
            width: 100%;
            padding: 12px;
            border: 2px solid #eee;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        input:focus {
            border-color: #e14a4a;
            outline: none;
            box-shadow: 0 0 0 3px rgba(225, 74, 74, 0.1);
        }

        .recovery-btn {
            width: 100%;
            padding: 12px;
            background: #e14a4a;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .recovery-btn:hover {
            background: #ff6b6b;
            transform: translateY(-2px);
        }

        .back-link {
            display: block;
            text-align: center;
            color: #e14a4a;
            text-decoration: none;
            margin-top: 20px;
            font-size: 14px;
        }

        .back-link:hover {
            text-decoration: underline;
        }

        .alert {
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-danger {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .text-danger {
            color: #e14a4a !important;
            font-size: 0.9rem;
            margin-top: 0.3rem;
        }

        .password-container {
            position: relative;
        }
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            padding: 0;
            font-size: 16px;
        }
        .password-toggle:hover {
            color: #e14a4a;
        }
    </style>
</head>
<body>
    <div style="position: fixed; top: 0; left: 0; right: 0; background: #f8f9fa; padding: 10px; z-index: 1000; border-bottom: 1px solid #dee2e6;">
        <div style="display: flex; justify-content: flex-end; gap: 20px;">
            <div style="display: flex; align-items: center; gap: 10px;">
                <label style="position: relative; display: inline-block; width: 60px; height: 34px;">
                    <input type="checkbox" id="voiceToggle" style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px;">
                        <span style="position: absolute; content: ''; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                    </span>
                </label>
                <span style="color: #333; font-size: 14px;">Lector (Alt+V)</span>
            </div>
            <div style="display: flex; align-items: center; gap: 10px;">
                <label style="position: relative; display: inline-block; width: 60px; height: 34px;">
                    <input type="checkbox" id="voiceNavToggle" style="opacity: 0; width: 0; height: 0;">
                    <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px;">
                        <span style="position: absolute; content: ''; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                    </span>
                </label>
                <span style="color: #333; font-size: 14px;">Reconocimiento de voz</span>
            </div>
        </div>
    </div>

    <div class="recovery-container" style="margin-top: 60px;">
        <h2>Recuperar Contraseña</h2>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">
                @TempData["Success"]
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">
                @TempData["Error"]
            </div>
        }
        <form method="post" asp-controller="Home" asp-action="RecuperarContrasena">
            <div class="form-group">
                <label for="email">Correo Electrónico</label>
                <input type="email" id="email" name="email" class="form-control" maxlength="30" 
                       placeholder="ejemplo@correo.com" 
                       title="Ingrese un correo electrónico válido" required />
            </div>
            <div class="form-group">
                <label for="dni">DNI</label>
                <input type="text" id="dni" name="dni" class="form-control" maxlength="8" minlength="8" 
                       placeholder="Ingrese su DNI" 
                       title="El DNI debe tener 8 dígitos" required />
            </div>
            <div class="form-group">
                <label for="nuevaContrasena">Nueva Contraseña</label>
                <div class="password-container">
                    <input type="password" id="nuevaContrasena" name="nuevaContrasena" class="form-control" maxlength="20" minlength="6" 
                           placeholder="Ingrese su nueva contraseña" 
                           title="La contraseña debe tener entre 6 y 20 caracteres, incluir letras, números y al menos un carácter especial" required />
                    <button type="button" class="password-toggle" onclick="togglePassword('nuevaContrasena')">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
                <span class="text-danger" id="errorNuevaContrasena"></span>
            </div>
            <div class="form-group">
                <label for="confirmarContrasena">Confirmar Contraseña</label>
                <div class="password-container">
                    <input type="password" id="confirmarContrasena" name="confirmarContrasena" class="form-control" maxlength="20" minlength="6" 
                           placeholder="Confirme su nueva contraseña" 
                           title="Las contraseñas deben coincidir" required />
                    <button type="button" class="password-toggle" onclick="togglePassword('confirmarContrasena')">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
                <span class="text-danger" id="errorConfirmarContrasena"></span>
            </div>
            <button type="submit" class="recovery-btn">Actualizar Contraseña</button>
        </form>
        <a asp-controller="Home" asp-action="Autenticacion" class="back-link">Volver al inicio de sesión</a>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/vozPorTexto.js" asp-append-version="true"></script>
    <script src="~/js/vozNavegacion.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const voiceToggle = document.getElementById('voiceToggle');
            const voiceNavToggle = document.getElementById('voiceNavToggle');

            // Función para actualizar el estado visual del switch
            function updateSwitchState(checkbox, isChecked) {
                const slider = checkbox.nextElementSibling;
                const circle = slider.firstElementChild;
                if (isChecked) {
                    slider.style.backgroundColor = '#e14a4a';
                    circle.style.transform = 'translateX(26px)';
                } else {
                    slider.style.backgroundColor = '#ccc';
                    circle.style.transform = 'translateX(0)';
                }
            }

            // Recuperar estado guardado
            const savedVoiceState = localStorage.getItem('voiceToggle');
            const savedNavState = localStorage.getItem('voiceNavToggle');

            if (savedVoiceState === 'true') {
                voiceToggle.checked = true;
                updateSwitchState(voiceToggle, true);
            }

            if (savedNavState === 'true') {
                voiceNavToggle.checked = true;
                updateSwitchState(voiceNavToggle, true);
            }

            // Eventos para los switches
            voiceToggle.addEventListener('change', function() {
                localStorage.setItem('voiceToggle', this.checked);
                updateSwitchState(this, this.checked);
            });

            voiceNavToggle.addEventListener('change', function() {
                localStorage.setItem('voiceNavToggle', this.checked);
                updateSwitchState(this, this.checked);
            });
        });

        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Validación de contraseña
        document.querySelector('input[name="nuevaContrasena"]').addEventListener('input', function() {
            const password = this.value;
            const hasLetter = /[a-zA-Z]/.test(password);
            const hasNumber = /[0-9]/.test(password);
            const hasSpecial = /[^a-zA-Z0-9]/.test(password);
            const errorSpan = document.getElementById('errorNuevaContrasena');
            
            if (!password) {
                this.setCustomValidity('La contraseña es requerida');
                errorSpan.textContent = 'La contraseña es requerida';
            } else if (password.length < 6) {
                this.setCustomValidity('La contraseña debe tener al menos 6 caracteres');
                errorSpan.textContent = 'La contraseña debe tener al menos 6 caracteres';
            } else if (password.length > 20) {
                this.setCustomValidity('La contraseña no puede tener más de 20 caracteres');
                errorSpan.textContent = 'La contraseña no puede tener más de 20 caracteres';
            } else if (!hasLetter || !hasNumber) {
                this.setCustomValidity('La contraseña debe incluir letras y números');
                errorSpan.textContent = 'La contraseña debe incluir letras y números';
            } else if (!hasSpecial) {
                this.setCustomValidity('La contraseña debe incluir al menos un carácter especial');
                errorSpan.textContent = 'La contraseña debe incluir al menos un carácter especial';
            } else {
                this.setCustomValidity('');
                errorSpan.textContent = '';
            }
        });

        // Validación de confirmación de contraseña
        document.querySelector('input[name="confirmarContrasena"]').addEventListener('input', function() {
            const password = document.querySelector('input[name="nuevaContrasena"]').value;
            const confirmPassword = this.value;
            const errorSpan = document.getElementById('errorConfirmarContrasena');

            if (password !== confirmPassword) {
                this.setCustomValidity('Las contraseñas no coinciden');
                errorSpan.textContent = 'Las contraseñas no coinciden';
            } else {
                this.setCustomValidity('');
                errorSpan.textContent = '';
            }
        });
    </script>
</body>
</html> 