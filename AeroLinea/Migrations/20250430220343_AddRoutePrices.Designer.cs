// <auto-generated />
using System;
using AeroLinea.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AeroLinea.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250430220343_AddRoutePrices")]
    partial class AddRoutePrices
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AeroLinea.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<ulong>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(1ul)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("locations", (string)null);
                });

            modelBuilder.Entity("AeroLinea.Models.Pasajero", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("email");

                    b.Property<int>("flag_active")
                        .HasColumnType("int")
                        .HasColumnName("flag_active");

                    b.Property<int>("flag_admin")
                        .HasColumnType("int")
                        .HasColumnName("flag_admin");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lastname");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("password");

                    b.Property<string>("sender_id")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("sender_id");

                    b.HasKey("id");

                    b.ToTable("iam_account", (string)null);
                });

            modelBuilder.Entity("AeroLinea.Models.RegisteredFlight", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<int>("destiny_id")
                        .HasColumnType("int")
                        .HasColumnName("destiny_id");

                    b.Property<string>("flag_active")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("flag_active");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("number");

                    b.Property<int>("origin_id")
                        .HasColumnType("int")
                        .HasColumnName("origin_id");

                    b.Property<DateTime>("time_start")
                        .HasColumnType("datetime")
                        .HasColumnName("time_start");

                    b.Property<int>("type_fly_id")
                        .HasColumnType("int")
                        .HasColumnName("type_fly_id");

                    b.HasKey("id");

                    b.ToTable("registered_flights", (string)null);
                });

            modelBuilder.Entity("AeroLinea.Models.RoutePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinyId")
                        .HasColumnType("int");

                    b.Property<decimal>("EconomyPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ExecutivePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<decimal>("PremiumPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DestinyId");

                    b.HasIndex("OriginId");

                    b.ToTable("route_prices");
                });

            modelBuilder.Entity("AeroLinea.Models.RoutePrice", b =>
                {
                    b.HasOne("AeroLinea.Models.Location", "Destiny")
                        .WithMany()
                        .HasForeignKey("DestinyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AeroLinea.Models.Location", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destiny");

                    b.Navigation("Origin");
                });
#pragma warning restore 612, 618
        }
    }
}
