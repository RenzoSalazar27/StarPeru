// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AeroLinea.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250613151544_Final")]
    partial class Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AeroLinea.Models.Consulta", b =>
                {
                    b.Property<int>("idConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idConsulta"));

                    b.Property<string>("comentarioConsulta")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("descripcionConsultas")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("motivoConsulta")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("urgencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("idConsulta");

                    b.HasIndex("idUsuario");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("AeroLinea.Models.Flota", b =>
                {
                    b.Property<int>("idAvion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idAvion"));

                    b.Property<int>("capacidadAvion")
                        .HasColumnType("int");

                    b.Property<string>("claseAvion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("fabricanteAvion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("matriculaAvion")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("modeloAvion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("idAvion");

                    b.ToTable("Flota");
                });

            modelBuilder.Entity("AeroLinea.Models.Pago", b =>
                {
                    b.Property<int>("idPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idPago"));

                    b.Property<bool>("aceptoTerminos")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("bancoTarjetaPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("correoFacturaPago")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cvvCvcPago")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("fechaExpiracionPago")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("fechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idReserva")
                        .HasColumnType("int");

                    b.Property<string>("metodoPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("nombreTitularPago")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("numCelularPago")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("numeroTarjetaPago")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal>("precioFinal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("precioTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("idPago");

                    b.HasIndex("idReserva");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("AeroLinea.Models.Pasajero", b =>
                {
                    b.Property<int>("idPasajero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idPasajero"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("EsMenorEdad")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ReservaVueloId")
                        .HasColumnType("int");

                    b.HasKey("idPasajero");

                    b.HasIndex("ReservaVueloId");

                    b.ToTable("Pasajeros");
                });

            modelBuilder.Entity("AeroLinea.Models.Piloto", b =>
                {
                    b.Property<int>("idPiloto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idPiloto"));

                    b.Property<string>("apellidoPiloto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("dniPiloto")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("fechaEmiLic")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("licenciaPiloto")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<DateTime>("nacimientoPiloto")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nombrePiloto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("telefonoPiloto")
                        .HasColumnType("int");

                    b.Property<string>("tipoLicPiloto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("idPiloto");

                    b.ToTable("Pilotos");
                });

            modelBuilder.Entity("AeroLinea.Models.ReservaVuelo", b =>
                {
                    b.Property<int>("idResVuelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idResVuelo"));

                    b.Property<string>("destinoVuelo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int>("idVuelo")
                        .HasColumnType("int");

                    b.Property<string>("mascotasResVue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("origenResVue")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("pagadoVuelo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("personasResVue")
                        .HasColumnType("int");

                    b.Property<decimal>("precioVuelo")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("idResVuelo");

                    b.HasIndex("idUsuario");

                    b.HasIndex("idVuelo");

                    b.ToTable("reservaVuelos");
                });

            modelBuilder.Entity("AeroLinea.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("apellidosUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("condicionUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("contrasenaUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("correoUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("discapacidad")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("esAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("identificacionUsuario")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("nacimientoUsuario")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nombresUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("telefonoUsuario")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AeroLinea.Models.Vuelo", b =>
                {
                    b.Property<int>("idVuelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idVuelo"));

                    b.Property<string>("destinoVuelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("fechaVuelo")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idAvion")
                        .HasColumnType("int");

                    b.Property<int>("idPiloto")
                        .HasColumnType("int");

                    b.Property<string>("origenVuelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("precioVuelo")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("idVuelo");

                    b.HasIndex("idAvion");

                    b.HasIndex("idPiloto");

                    b.ToTable("Vuelo");
                });

            modelBuilder.Entity("AeroLinea.Models.Consulta", b =>
                {
                    b.HasOne("AeroLinea.Models.Usuario", "Usuario")
                        .WithMany("Consultas")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AeroLinea.Models.Pago", b =>
                {
                    b.HasOne("AeroLinea.Models.ReservaVuelo", "ReservaVuelo")
                        .WithMany()
                        .HasForeignKey("idReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservaVuelo");
                });

            modelBuilder.Entity("AeroLinea.Models.Pasajero", b =>
                {
                    b.HasOne("AeroLinea.Models.ReservaVuelo", "ReservaVuelo")
                        .WithMany("Pasajeros")
                        .HasForeignKey("ReservaVueloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservaVuelo");
                });

            modelBuilder.Entity("AeroLinea.Models.ReservaVuelo", b =>
                {
                    b.HasOne("AeroLinea.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AeroLinea.Models.Vuelo", "Vuelo")
                        .WithMany()
                        .HasForeignKey("idVuelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Vuelo");
                });

            modelBuilder.Entity("AeroLinea.Models.Vuelo", b =>
                {
                    b.HasOne("AeroLinea.Models.Flota", "Avion")
                        .WithMany()
                        .HasForeignKey("idAvion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AeroLinea.Models.Piloto", "Piloto")
                        .WithMany()
                        .HasForeignKey("idPiloto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avion");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("AeroLinea.Models.ReservaVuelo", b =>
                {
                    b.Navigation("Pasajeros");
                });

            modelBuilder.Entity("AeroLinea.Models.Usuario", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
